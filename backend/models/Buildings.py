from datetime import datetime
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()


class BuildingsFromFlask(db.Model):
    project_number = db.Column(db.String(100))
    building_name = db.Column(db.String(100), primary_key=True)
    date_created = db.Column(db.DateTime, nullable=False, default=datetime.now())
    building_program = db.Column(db.String(100))
    sst = db.Column(db.String(100))
    service_territory = db.Column(db.String(100))
    bc_housing_operating_agreement = db.Column(db.String(100))
    ecap_done = db.Column(db.String(100))
    site_name = db.Column(db.String(100))
    site_address = db.Column(db.String(100))
    city = db.Column(db.String(100))
    owner_organization = db.Column(db.String(100))
    office_address = db.Column(db.String(100))
    applicant_name = db.Column(db.String(100))
    telephone = db.Column(db.String(100))
    email = db.Column(db.String(100))
    program_job = db.Column(db.String(100))
    site_contact_name = db.Column(db.String(100))
    site_auditor = db.Column(db.String(100))
    project_responsible_engineer = db.Column(db.String(100))
    email_of_responsible_engineer = db.Column(db.String(100))
    site_visit_date = db.Column(db.DateTime)
    year_of_original_construction = db.Column(db.Integer)
    year_of_last_remodel = db.Column(db.Integer)
    number_of_floors = db.Column(db.Integer)
    envelope_condition = db.Column(db.String(100))
    building_type = db.Column(db.String(100))
    total_floor_area_declared_by_applicant = db.Column(db.Float)
    total_suite_area = db.Column(db.Float)
    equiv_full_time_office_employee_fte = db.Column(db.Integer)
    residents_murb = db.Column(db.Integer)
    num_elevators = db.Column(db.Integer)
    num_exterior_doors = db.Column(db.Integer)
    number_of_meter_groups = db.Column(db.Integer)
    name_of_the_meters = db.Column(db.String(100))
    building_has_oa_ventilation = db.Column(db.String(100))
    building_has_tenant_common_laundry = db.Column(db.String(100))
    building_has_central_commercial_laundry = db.Column(db.String(100))
    building_has_commercial_kitchen = db.Column(db.String(100))
    fuel_types_individual_suite_electric_meters = db.Column(db.String(100))
    fuel_types_dhw_primary_fuel = db.Column(db.String(100))
    fuel_types_outdoor_air_ventilation_heated_by = db.Column(db.String(100))
    fuel_types_sh_primary_fuel = db.Column(db.String(100))
    thermal_plant_space_heating_gas_avg_efficiency = db.Column(db.Float)
    thermal_plant_dhw_gas_avg_efficiency = db.Column(db.Float)
    thermal_plant_gas_boiler_heating_control = db.Column(db.String(100))
    thermal_plant_hhw_design_temp = db.Column(db.Float)
    thermal_plant_observed_temp = db.Column(db.Float)
    thermal_plant_oat_reset = db.Column(db.String(100))
    thermal_plant_has_cooling = db.Column(db.String(100))
    electricty_paid_by_tenants = db.Column(db.String(100))
    oa_ventilation_oa_heating_set_point = db.Column(db.Float)
    oa_ventilation_fan_speed_average_speed_percent = db.Column(db.Float)
    oa_ventilation_heating_control = db.Column(db.String(100))
    tenant_common_laundry_dryer_fuel = db.Column(db.String(100))
    tenant_common_laundry_total_loads_per_yr_estimate_from_coins = db.Column(db.Float)
    tenant_common_laundry_num_of_washers_and_dryer_pairs = db.Column(db.Integer)
    central_comm_laundry_loads_per_day = db.Column(db.Integer)
    central_comm_laundry_days_per_week = db.Column(db.Integer)
    central_comm_laundry_loads_per_yr_estimate = db.Column(db.Integer)
    # commercial_kit_start_time = db.Column(db.DateTime)
    # commercial_kit_end_time = db.Column(db.DateTime)
    commercial_kit_days_per_year = db.Column(db.Integer)
    commercial_kit_meals_per_day = db.Column(db.Integer)
    window_draftyness = db.Column(db.String(100))
    bachelor_studio = db.Column(db.Integer)
    one_bedroom = db.Column(db.Integer)
    two_bedroom = db.Column(db.Integer)
    three_bedroom = db.Column(db.Integer)
    num_of_suites = db.Column(db.Integer)
    avg_area_bachelor_studio = db.Column(db.Float)
    avg_area_one_bedroom = db.Column(db.Float)
    avg_area_two_bedroom = db.Column(db.Float)
    avg_area_three_bedroom = db.Column(db.Float)

    def __init__(self, **kwargs):
        self.building_name = kwargs['building_name']
        self.date_created = datetime.today().strftime('%Y-%m-%d')
        self.building_program = kwargs['building_program']
        self.sst = kwargs['sst']
        self.service_territory = kwargs['service_territory']
        self.bc_housing_operating_agreement = kwargs['bc_housing_operating_agreement']
        self.ecap_done = kwargs['ecap_done']
        self.site_name = kwargs['site_name']
        self.site_address = kwargs['site_address']
        self.city = kwargs['city']
        self.owner_organization = kwargs['owner_organization']
        self.office_address = kwargs['office_address']
        self.applicant_name = kwargs['applicant_name']
        self.telephone = kwargs['telephone']
        self.email = kwargs['email']
        self.program_job = kwargs['program_job']
        self.site_contact_name = kwargs['site_contact_name']
        self.site_auditor = kwargs['site_auditor']
        self.project_responsible_engineer = kwargs['project_responsible_engineer']
        self.email_of_responsible_engineer = kwargs['email_of_responsible_engineer']
        self.site_visit_date = kwargs['site_visit_date']
        self.year_of_original_construction = kwargs['year_of_original_construction']
        self.year_of_last_remodel = kwargs['year_of_last_remodel']
        self.number_of_floors = kwargs['number_of_floors']
        self.envelope_condition = kwargs['envelope_condition']
        self.building_type = kwargs['building_type']
        self.total_floor_area_declared_by_applicant = kwargs['total_floor_area_declared_by_applicant']
        # self.total_suite_area = kwargs['total_suite_area']
        self.equiv_full_time_office_employee_fte = kwargs['equiv_full_time_office_employee_fte']
        self.residents_murb = kwargs['residents_murb']
        self.num_elevators = kwargs['num_elevators']
        self.num_exterior_doors = 0
        self.number_of_meter_groups = kwargs['number_of_meter_groups']
        self.name_of_the_meters = kwargs['name_of_the_meters']
        self.building_has_oa_ventilation = kwargs['building_has_oa_ventilation']
        self.building_has_tenant_common_laundry = kwargs['building_has_tenant_common_laundry']
        self.building_has_central_commercial_laundry = kwargs['building_has_central_commercial_laundry']
        self.building_has_commercial_kitchen = kwargs['building_has_commercial_kitchen']
        self.fuel_types_individual_suite_electric_meters = kwargs['fuel_types_individual_suite_electric_meters']
        self.fuel_types_dhw_primary_fuel = kwargs['fuel_types_dhw_primary_fuel']
        self.fuel_types_outdoor_air_ventilation_heated_by = kwargs['fuel_types_outdoor_air_ventilation_heated_by']
        self.fuel_types_sh_primary_fuel = kwargs['fuel_types_sh_primary_fuel']
        self.thermal_plant_space_heating_gas_avg_efficiency = kwargs['thermal_plant_space_heating_gas_avg_efficiency']
        self.thermal_plant_dhw_gas_avg_efficiency = kwargs['thermal_plant_dhw_gas_avg_efficiency']
        self.thermal_plant_gas_boiler_heating_control = kwargs['thermal_plant_gas_boiler_heating_control']
        self.thermal_plant_hhw_design_temp = kwargs['thermal_plant_hhw_design_temp']
        self.thermal_plant_observed_temp = kwargs['thermal_plant_observed_temp']
        self.thermal_plant_oat_reset = kwargs['thermal_plant_oat_reset']
        self.thermal_plant_has_cooling = kwargs['thermal_plant_has_cooling']
        self.electricty_paid_by_tenants = kwargs['electricty_paid_by_tenants']

        self.oa_ventilation_oa_heating_set_point = 0
        self.oa_ventilation_fan_speed_average_speed_percent = 0
        self.oa_ventilation_heating_control = ""
        self.tenant_common_laundry_dryer_fuel = ""
        self.tenant_common_laundry_total_loads_per_yr_estimate_from_coins = 0
        self.tenant_common_laundry_num_of_washers_and_dryer_pairs = 0
        self.central_comm_laundry_loads_per_day = 0
        self.central_comm_laundry_days_per_week = 0
        self.central_comm_laundry_loads_per_yr_estimate = 0
        self.commercial_kit_start_time = 0
        self.commercial_kit_end_time = 0
        self.commercial_kit_days_per_year = 0
        self.commercial_kit_meals_per_day = 0
        self.window_draftyness = kwargs['window_draftyness']
        self.bachelor_studio = 0
        self.one_bedroom = 0
        self.two_bedroom = 0
        self.three_bedroom = 0
        self.num_of_suites = 0
        self.avg_area_bachelor_studio = 0
        self.avg_area_one_bedroom = 0
        self.avg_area_two_bedroom = 0
        self.avg_area_three_bedroom = 0
